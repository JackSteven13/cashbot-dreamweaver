
import { useEffect, useRef } from 'react';
import { supabase } from '@/integrations/supabase/client';
import { clearAuthData } from '@/lib/supabase';

const AuthCleanup = () => {
  const cleanupDone = useRef(false);
  
  // Nettoyer les donnÃ©es d'authentification de faÃ§on agressive
  useEffect(() => {
    if (cleanupDone.current) return;
    
    const performCleanup = async () => {
      console.log("ðŸ§¹ AuthCleanup: Nettoyage agressif des donnÃ©es d'authentification");
      
      // Premier nettoyage complet
      clearAuthData();
      
      try {
        // DÃ©connexion explicite d'abord avec des options de sÃ©curitÃ© maximales
        await supabase.auth.signOut({ scope: 'global' });
      } catch (e) {
        console.log("Erreur de dÃ©connexion ignorÃ©e:", e);
      }
      
      // Petit dÃ©lai pour s'assurer que toutes les opÃ©rations asynchrones sont terminÃ©es
      await new Promise(resolve => setTimeout(resolve, 800));
      
      // Second nettoyage pour s'assurer que tout est propre
      clearAuthData();
      
      // TroisiÃ¨me nettoyage aprÃ¨s un dÃ©lai plus long pour les opÃ©rations diffÃ©rÃ©es
      setTimeout(() => {
        if (!cleanupDone.current) {
          clearAuthData();
          cleanupDone.current = true;
        }
      }, 2000);
      
      // Marquer comme terminÃ©
      cleanupDone.current = true;
      
      console.log("ðŸ§¹ AuthCleanup: Nettoyage terminÃ©");
    };
    
    performCleanup();
    
    // Nettoyage au dÃ©montage pour Ã©viter les fuites mÃ©moire
    return () => {
      cleanupDone.current = true;
    };
  }, []);

  return null; // Composant sans rendu
};

export default AuthCleanup;
